import java.io.File;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.NodeList;


public class Run {

	static String XmlFile = null;
	static String [] dbSetup = { "com.mysql.cj.jdbc.Driver","jdbc:mysql://localhost:3306/", "root", "root", "STUDENTS"};
	
	// Database constructs pass to all programs
	private static String [][] dataNames= {{"rdf_ID", "VARCHAR (38)"},//0
			{"NominalVoltage", "FLOAT (16,10)"}, //1
			{"Name", "VARCHAR(20)"}, //2 *************IS THIS ENOUGH FOR NAME 
			{"MaxOperatingP", "FLOAT (16,10)"}, //3 
			{"MinOperatingP", "FLOAT (16,10)"}, //4
			{"RatedS", "FLOAT (16,10)"}, //5
			{"P", "FLOAT (16,10)"}, //6 - SSH values
			{"Q", "FLOAT (16,10)"}, //7 - SSH Values
			{"TargetValue", "FLOAT (16,10)"}, //8 - SSH values ******?
			{"R", "FLOAT (16,10)"}, //9
			{"X", "FLOAT (16,10)"}, //10
			{"State", "BOOLEAN"}, //11 - SSH values
			{"Step", "INT"}, //12 - SSH values
			{"RDF_ID_Region", "VARCHAR (38)"},//13
			{"RDF_ID_Substation", "VARCHAR (38)"}, //14
			{"RDF_ID_BaseVoltage", "VARCHAR (38)"}, //15
			{"RDF_ID_EquipmentContainer", "VARCHAR (38)"}, //16
			{"RDF_ID_GeneratingUnit", "VARCHAR (38)"},//17
			{"RDF_ID_RegulatingControl", "VARCHAR (38)"}, //18
			{"RDF_ID_PowerTransformer", "VARCHAR (38)"}, //19
			{"RDF_ID_BaseVoltage", "VARCHAR (38)"}}; //20 - added to deal with CIM inconsistency
	
	
	
	public static void main(String[] args) {


		// Structure
		// Run allows EQ file to be added
		// Calls the EQfile parser which creates the elements and then creates a database
		// EQ file parser uses arraylists to hold the node lists and equipment lists. each equipment item has a type and string array of data. the information held in data is determined by type. 
		
		

		try {
			File EQFile = new File("Assignment_EQ_reduced.xml");
			ParseEQ parser = new ParseEQ(EQFile);
			parser.dbBuild(dbSetup);
		}
		catch(Exception e){
			e.printStackTrace();
		}
	

		
		
		
	}

}
